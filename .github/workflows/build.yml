name: Kernel Builder

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-kernel:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: Teamhackneyed/android_kernel_oneplus_sm6375
        path: kernel

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential libssl-dev libncurses-dev \
          bison flex bc rsync kmod cpio python3 \
          clang llvm lld libelf-dev git wget zip

    - name: Clean Source Tree
      run: |
        cd kernel
        # Verificar se o Makefile existe
        if [ ! -f Makefile ]; then
          echo "Makefile not found! Listing directory:"
          ls -la
          exit 1
        fi
        
        # Executar mrproper apenas se o alvo existir
        if make -n mrproper &> /dev/null; then
          make ARCH=arm64 mrproper
        else
          echo "mrproper target not found, using manual clean"
          rm -rf out .config
          find . -name '*.o' -delete
          find . -name '*.cmd' -delete
          find . -name '*.d' -delete
          find . -name '*.tmp' -delete
        fi

    - name: Setup Toolchains
      run: |
        # Criar diretório temporário para extração segura
        mkdir toolchain_extract
        
        # Baixar e extrair Clang
        wget -q https://github.com/ZyCromerZ/Clang/releases/download/21.0.0git-20250617-release/Clang-21.0.0git-20250617.tar.gz -P toolchain_extract
        tar -xzf toolchain_extract/Clang-21.0.0git-20250617.tar.gz -C toolchain_extract
        
        # Mover conteúdo extraído para kernel/clang
        mkdir -p kernel/clang
        mv toolchain_extract/* kernel/clang/
        
        # Instalar GCC
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-gnu-9.3 kernel/gcc
        
        # Limpeza
        rm -rf toolchain_extract

    - name: Download Config
      run: |
        wget https://github.com/secretgogeta-kernels/android_kernel_oneplus_sm6375/releases/download/A/config.gz -O kernel/config.gz
        gunzip -c kernel/config.gz > kernel/.config

    - name: Prepare Build Environment
      run: |
        cd kernel
        make ARCH=arm64 O=out CC=$(pwd)/clang/bin/clang \
            CROSS_COMPILE=$(pwd)/gcc/bin/aarch64-linux-gnu- \
            oldconfig </dev/null

    - name: Build Kernel
      run: |
        cd kernel
        make -j$(nproc) ARCH=arm64 O=out CC=$(pwd)/clang/bin/clang \
            CLANG_TRIPLE=aarch64-linux-gnu- \
            CROSS_COMPILE=$(pwd)/gcc/bin/aarch64-linux-gnu- \
            LD=ld.lld \
            AR=llvm-ar \
            NM=llvm-nm \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            STRIP=llvm-strip \
            LLVM=1 \
            LLVM_IAS=1

    - name: Setup AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3
        mkdir -p AnyKernel3/dtbs
        
        # Copiar artefatos de compilação
        cp kernel/out/arch/arm64/boot/Image.gz AnyKernel3/
        cp kernel/out/arch/arm64/boot/dts/vendor/*.dtb AnyKernel3/dtbs/ 2>/dev/null || true

    - name: Create Flashable Zip
      run: |
        cd AnyKernel3
        zip -r9 kernel.zip *
        mv kernel.zip ../

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-build
        path: |
          kernel.zip
          kernel/out/arch/arm64/boot/Image.gz
